#include "mainshop.h"
#include "ui_mainshop.h"
#include "mainwindow.h"
#include "shoppingcart.h"
#include <QListWidgetItem>
#include <QVBoxLayout>
#include <QPixmap>
#include <QScrollArea>
#include <QPainter>
#include <QPushButton>
#include <QLabel>
#include <QGridLayout>
#include <QMessageBox>
#include <QStyleOptionButton>
#include <QSpacerItem>
#include <algorithm>
#include <random>

mainshop::mainshop(QWidget *parent)
    : QMainWindow(parent)
    , ui(new Ui::mainshop)
{
    ui->setupUi(this);
}

mainshop::mainshop(const QString &login, QWidget *parent)
    : QMainWindow(parent), ui(new Ui::mainshop)
{
    ui->setupUi(this);

    ui->categoryList->setCurrentRow(0);
    ui->categoryList->item(0)->setSelected(true);

    this->setWindowTitle("Oriventa Shop");
    QIcon icon(":/images/OS.PNG");
    this->setWindowIcon(icon);

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å –ª–æ–≥–∏–Ω–æ–º
    ui->Button_user->setText(login);

    SetIconsFS();
    Catalog();
    loadCategories();


    cart = new shoppingcart(this);
    cart->setWindowTitle("–ö–æ—Ä–∑–∏–Ω–∞");
    connect(this, &mainshop::productAddedToCart, cart, &shoppingcart::addProductToCart);
    connect(ui->search, &QLineEdit::textChanged, this, &mainshop::searchProducts);

    connect(ui->sort2, &QPushButton::clicked, this, &mainshop::sortProductsAscending); // –ö–Ω–æ–ø–∫–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é
    connect(ui->sort1, &QPushButton::clicked, this, &mainshop::sortProductsDescending); // –ö–Ω–æ–ø–∫–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ —É–±—ã–≤–∞–Ω–∏—é
    connect(ui->resetButton, &QPushButton::clicked, this, &mainshop::resetSorting);





    QMenu *menu = new QMenu(this);

    QAction *logoutAction = new QAction("–í–∏–π—Ç–∏", this);          // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å
    menu->addAction(logoutAction);

    menu->setStyleSheet(
        "QMenu {"
        "   background-color: white;"
        "   border: 1px solid #c0c0c0;"
        "   padding: 5px;"
        "}"
        "QMenu::item {"
        "   padding: 6px 12px;"
        "   color: black;"
        "   border-radius: 5px;"
        "}"
        "QMenu::item:selected {"
        "   background-color: rgb(87, 0, 134);"
        "   color: white;"
        "   border-radius: 5px;"
        "}"
        );

    ui->Button_user->setMenu(menu);

    connect(logoutAction, &QAction::triggered, this, &mainshop::logout);
    connect(ui->categoryList, &QListWidget::itemClicked, this, &mainshop::onCategorySelected);


    // –°–æ–∑–¥–∞–µ–º layout –¥–ª—è areaScroll
    QGridLayout* layout = new QGridLayout();
    layout->setSpacing(40);
    layout->setAlignment(Qt::AlignTop);

    QWidget* scrollContent = new QWidget();
    scrollContent->setLayout(layout);
    ui->scrollArea->setWidget(scrollContent);
    ui->scrollArea->setWidgetResizable(true);

    // –ù–∞—Å—Ç—Ä–æ–∏–º —Å—Ç–∏–ª–∏ –¥–ª—è ScrollArea
    ui->scrollArea->setStyleSheet(
        "QScrollArea {"
        "   background-color: white;" // –¶–≤–µ—Ç —Ñ–æ–Ω–∞ ScrollArea
        "   border: none;" // –£–±–∏—Ä–∞–µ–º –≥—Ä–∞–Ω–∏—Ü—É
        "   padding: 10px;" // –û—Ç—Å—Ç—É–ø—ã –≤–æ–∫—Ä—É–≥ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
        "   border-radius: 10px;" // –°–∫—Ä—É–≥–ª—è–µ–º —É–≥–ª—ã
        "}"
        );

    this->gridLayout = layout; // –°–æ—Ö—Ä–∞–Ω—è–µ–º layout –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

    displayProductsForCategory("–ì–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞");
}

mainshop::~mainshop()
{
    delete ui;
}

void mainshop::Catalog() {
    ui->categoryList->setSpacing(2);
}

void mainshop::SetIconsFS()
{
    QLineEdit *searchEdit = findChild<QLineEdit*>("search");

    if (searchEdit) {
        QString searchIcon = "üîç";
        QPixmap searchPixmap(16, 16);
        searchPixmap.fill(Qt::transparent);

        QPainter searchPainter(&searchPixmap);
        searchPainter.drawText(searchPixmap.rect(), Qt::AlignCenter, searchIcon);

        QIcon searchIconFinal(searchPixmap);
        searchEdit->addAction(searchIconFinal, QLineEdit::LeadingPosition);

        QString clearIcon = "‚®â";
        QPixmap clearPixmap(16, 16);
        clearPixmap.fill(Qt::transparent);

        QPainter clearPainter(&clearPixmap);
        clearPainter.drawText(clearPixmap.rect(), Qt::AlignCenter, clearIcon);

        QAction *clearAction = new QAction(QIcon(clearPixmap), "", searchEdit);
        searchEdit->addAction(clearAction, QLineEdit::TrailingPosition);
        clearAction->setVisible(false);

        connect(searchEdit, &QLineEdit::textChanged, this, [=](const QString &text) {
            clearAction->setVisible(!text.isEmpty());
        });

        connect(clearAction, &QAction::triggered, this, [=]() {
            searchEdit->clear();
        });
    }

    QPixmap pixmap(":/images/OS.PNG");

    ui->Logos->setPixmap(pixmap);
    ui->Logos->setScaledContents(true);

    QString cart = "üõí";
    QPixmap pixmap1(52, 52);
    pixmap1.fill(Qt::transparent);

    QPainter painter(&pixmap1);
    QFont font = painter.font();
    font.setPointSize(20);
    painter.setFont(font);
    painter.setPen(Qt::black);
    QRect adjustedRect = pixmap1.rect().adjusted(0, 0, 0, 0);
    painter.drawText(adjustedRect, Qt::AlignCenter, cart);
    painter.end();
    QIcon cartIcon(pixmap1);
    ui->cart->setIcon(cartIcon);
    ui->cart->setIconSize(QSize(52, 52));
    ui->cart->setText("");
}


void mainshop::logout()
{
    MainWindow* window = new MainWindow;
    this->close();
    window->show();
}

void mainshop::on_cart_clicked()
{
    cart->show();
    cart->raise(); // –ü–æ–¥–Ω–∏–º–∞–µ–º –æ–∫–Ω–æ –Ω–∞ –ø–µ—Ä–µ–¥–Ω–∏–π –ø–ª–∞–Ω
    cart->activateWindow();
}



void mainshop::addProductCard(const Product& product) {
    // –°—Ç–≤–æ—Ä—é—î–º–æ –æ—Å–Ω–æ–≤–Ω–∏–π –≤—ñ–¥–∂–µ—Ç –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä—É
    QWidget* cardWidget = new QWidget();
    cardWidget->setFixedSize(200, 300); // –§—ñ–∫—Å–æ–≤–∞–Ω–∏–π —Ä–æ–∑–º—ñ—Ä –∫–∞—Ä—Ç–æ—á–∫–∏

    // –°—Ç–∏–ª—ñ –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä—É
    cardWidget->setStyleSheet(
        "QWidget {"
        "    background-color: white;"
        "    border: 1px solid #dcdcdc;"
        "    border-radius: 10px;"
        "}"
        );

    // –°—Ç–≤–æ—Ä—é—î–º–æ –º–∞–∫–µ—Ç –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏
    QVBoxLayout* cardLayout = new QVBoxLayout(cardWidget);
    cardLayout->setAlignment(Qt::AlignCenter);

    // –î–æ–¥–∞—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
    QLabel* imageLabel = new QLabel();
    imageLabel->setFixedSize(180, 180);
    imageLabel->setPixmap(QPixmap(product.imagePath).scaled(180, 180, Qt::KeepAspectRatio));
    imageLabel->setAlignment(Qt::AlignCenter);
    imageLabel->setStyleSheet("border-radius: 10px; border-top: none; "); // –ó–∞–∫—Ä—É–≥–ª–µ–Ω—ñ –∫—É—Ç–∏

    // –î–æ–¥–∞—î–º–æ –Ω–∞–∑–≤—É —Ç–æ–≤–∞—Ä—É
    QLabel* nameLabel = new QLabel(product.name);
    nameLabel->setAlignment(Qt::AlignCenter);
    nameLabel->setStyleSheet("font-weight: bold; font-size: 14px; color: #333333; border: none;");

    // –î–æ–¥–∞—î–º–æ —Ü—ñ–Ω—É —Ç–æ–≤–∞—Ä—É
    QLabel* priceLabel = new QLabel(QString::number(product.price, 'f', 2) + " –≥—Ä–Ω");
    priceLabel->setAlignment(Qt::AlignCenter);
    priceLabel->setStyleSheet("color: #ff6600; font-size: 16px; font-weight: bold; border: none;");

    // –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫–∏
    QPushButton* buyButton = new QPushButton("–ö—É–ø–∏—Ç–∏");
    buyButton->setStyleSheet(
        "QPushButton {"
        "    background-color: rgb(87, 0, 134);"
        "    color: white;"
        "    border: none;"
        "    border-radius: 5px;"
        "    padding: 8px 16px;"
        "    font-size: 14px;"
        "}"
        "QPushButton:hover {"
        "    background-color: rgb(0, 238, 255);"
        "}"
        );
    connect(buyButton, &QPushButton::clicked, this, [this, product]() {
        emit productAddedToCart(product); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–≤–∞—Ä–µ
        QMessageBox::information(this, "–î–æ–¥–∞–Ω–æ –¥–æ –∫–æ—Ä–∑–∏–Ω–∏", product.name + " —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ!");
    });



    // –î–æ–¥–∞—î–º–æ –≤—Å—ñ –≤—ñ–¥–∂–µ—Ç–∏ –≤ –º–∞–∫–µ—Ç –∫–∞—Ä—Ç–æ—á–∫–∏
    cardLayout->addWidget(imageLabel);
    cardLayout->addWidget(nameLabel);
    cardLayout->addWidget(priceLabel);
    cardLayout->addWidget(buyButton);

    // –î–æ–¥–∞—î–º–æ –∫–∞—Ä—Ç–æ—á–∫—É –≤ —Å—ñ—Ç–∫—É
    int row = gridLayout->count() / 5;
    int col = gridLayout->count() % 5;
    gridLayout->addWidget(cardWidget, row, col, Qt::AlignHCenter);
}



void mainshop::loadCategories() {
    // –û—á–∏—Å—Ç–∏–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
    categoryProducts.clear();

    categoryProducts["–ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞"] = {
        {"–¢–µ–ª–µ—Ñ–æ–Ω Iphone", ":/electronics/Iphone.png", 39999.99},
        {"–ö–∞–º–µ—Ä–∞ –¥–ª—è –∑–π–æ–º–æ–∫", ":/electronics/Kamera.png", 14999.99},
        {"–ù–æ—É—Ç–±—É–∫ Lenovo", ":/electronics/Lenovo.png", 25000.00},
        {"Macbook Air", ":/electronics/Macbook.png", 49000.50},
        {"–§–æ—Ç–æ–∞–ø–∞—Ä–∞—Ç", ":/electronics/Photoapparat.png", 18000.00},
        {"–¢–µ–ª–µ—Ñ–æ–Ω Samsung", ":/electronics/Samsung.png", 30000.99},
        {"–¢–µ–ª–µ—Ñ–æ–Ω Xiaomi", ":/electronics/Xiaomi.png", 14999.99}
    };

    categoryProducts["–û–¥—è–≥"] = {
        {"–ö—É—Ä—Ç–∫–∞", ":/clothes/Jacket.png", 4000.99},
        {"–®–∞–ø–∫–∞", ":/clothes/Cap.png", 500.50},
        {"–î–∂–∏–Ω—Å–∏", ":/clothes/Jeans.png", 1799.99},
        {"–ö–æ—Ñ—Ç–∞", ":/clothes/Zipka.png", 1200.50},
        {"–ö–µ–¥–∏", ":/clothes/Keds.png", 2500.99},
        {"–ö—Ä–æ—Å—ñ–≤–∫–∏", ":/clothes/Sneakers.png", 3999.99},
        {"–ü–∞–Ω–∞–º–∞", ":/clothes/Panama.png", 699.50},
        {"–§—É—Ç–±–æ–ª–∫–∞", ":/clothes/T-shirt.png", 899.99},
        {"–®–æ—Ä—Ç–∏", ":/clothes/Shorts.png", 1499.50}
    };

    categoryProducts["–ü—Ä–æ–¥—É–∫—Ç–∏"] = {
        {"–ú–æ–ª–æ–∫–æ", ":/products/Moloko.png", 37.50},
        {"–ü—ñ—Ü—Ü–∞ –ì–∞–ª–∞", ":/products/Pizza.png", 149.99},
        {"–°—ñ–∫ –ú—É–ª—å—Ç–∏—Ñ—Ä—É–∫—Ç", ":/products/Sik.png", 46.99},
        {"–°–º–µ—Ç–∞–Ω–∞ 20%", ":/products/Smetana.png", 55.00},
        {"–°–Ω—ñ–∫–µ—Ä—Å", ":/products/Snickers.png", 28.99},
        {"–ü–æ–º—ñ–¥–æ—Ä–∏", ":/products/Tomati.png", 69.50},
        {"–¶—É–∫–æ—Ä 1–∫–≥", ":/products/Tsukor.png", 41.99}
    };

    categoryProducts["–ü–æ–±—É—Ç–æ–≤–∞ —Ç–µ—Ö–Ω—ñ–∫–∞"] = {
        {"–ß–∞–π–Ω–∏–∫ Bosch", ":/equipment/Chainik.png", 1899.99},
        {"–•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ Philips", ":/equipment/Holodilnik.png", 21999.50},
        {"–ú—ñ–∫—Ä–æ—Ö–≤–∏–ª—å–æ–∫–≤–∞ Samsung", ":/equipment/Mikrohvilyovka.png", 6999.99},
        {"–ü–ª–∏—Ç–∞ –µ–ª–µ–∫—Ç—Ä–∏—á–Ω–∞ Gorenje", ":/equipment/Pechka.png", 17999.50},
        {"–ü–∏–ª–æ—Å–æ—Å Philips", ":/equipment/Pilosos.png", 9999.99},
        {"–ü—Ä–∞–ª—å–Ω–∞ –º–∞—à–∏–Ω–∫–∞ Bosch", ":/equipment/Stiralna_mahsinka.png", 15999.99},
        {"–ü—Ä–∞—Å–∫–∞ Tefal", ":/equipment/Utug.png", 2599.50}
    };

    categoryProducts["–ó–æ–æ—Ç–æ–≤–∞—Ä–∏"] = {
        {"–Ü–≥—Ä–∞—à–∫–∞ –¥–ª—è —Ç–≤–∞—Ä–∏–Ω", ":/pet/Igrashka.png", 249.99},
        {"–ö–æ—Ä–º –¥–ª—è –∫–æ—Ç—ñ–≤", ":/pet/Korm_dlya_kotiv.png", 399.99},
        {"–ö–æ—Ä–º –¥–ª—è –ø–∞–ø—É–≥", ":/pet/Korm_dlya_popug.png", 249.50},
        {"–ö–æ—Ä–º –¥–ª—è —Å–æ–±–∞–∫", ":/pet/Korm_dlya_sobak.png", 549.99},
        {"–ú–∏—Å–∫–∞ –¥–ª—è –∫–æ—Ä–º—É", ":/pet/Miska.png", 249.50},
        {"–ü–æ–≤—ñ–¥–µ—Ü—å", ":/pet/Povodok.png", 399.99}
    };

    categoryProducts["–°–∞–Ω—Ç–µ—Ö–Ω—ñ–∫–∞"] = {
        {"–§—ñ–ª—å—Ç—Ä", ":/plumbing/Filtr.png", 949.50},
        {"–†–æ–∑–≤—ñ–¥–Ω–∏–π –∫–ª—é—á", ":/plumbing/Kluch_rozv.png", 1249.99},
        {"–ö—Ä–∞–Ω —Å—Ä—ñ–±–ª—è—Å—Ç–∏–π", ":/plumbing/Kran.png", 2499.99},
        {"–ö—Ä–∞–Ω —á–æ—Ä–Ω–∏–π", ":/plumbing/Kran2.png", 2899.50},
        {"–õ—ñ—á–∏–ª—å–Ω–∏–∫", ":/plumbing/Lichilnik.png", 1499.99},
        {"–¢—Ä—É–±–∞", ":/plumbing/Truba.png", 699.50}
    };

    categoryProducts["–¢–æ–≤–∞—Ä–∏ –¥–ª—è –¥–æ–º—É"] = {
        {"–ö—Ä—É–∂–∫–∞", ":/item_for_home/Krujka.png", 349.99},
        {"–ù–∞–±—ñ—Ä –ª–æ–∂–æ–∫ —Ç–∞ –≤–∏–¥–µ–ª–æ–∫", ":/item_for_home/Nabir_lojok_i_bydelok.png", 1249.50},
        {"–ü–ª–µ–¥", ":/item_for_home/Pled.png", 749.99},
        {"–ù–∞–±—ñ—Ä –∑ 3 –ø–æ–¥—É—à–æ–∫", ":/item_for_home/Podushki.png", 1749.99},
        {"–°–∫–æ–≤–æ—Ä—ñ–¥–∫–∞", ":/item_for_home/Skovoridka.png", 1299.50},
        {"–ó–∞—Å—ñ–± –¥–ª—è –º–∏—Ç—Ç—è –ø–æ—Å—É–¥—É", ":/item_for_home/Zasib_dlya_mittya_posudu.png", 299.99},
        {"–ó–∞—Å—ñ–± –¥–ª—è –ø—Ä–∞–Ω–Ω—è", ":/item_for_home/Zasib_dlya_prannya.png", 449.99}
    };



    QList<Product> allProducts;
    QSet<QString> uniqueNames; // –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∏–º–µ–Ω —Ç–æ–≤–∞—Ä–æ–≤

    for (auto it = categoryProducts.cbegin(); it != categoryProducts.cend(); ++it) {
        for (const Product& product : it.value()) {
            if (!uniqueNames.contains(product.name)) {
                uniqueNames.insert(product.name); // –î–æ–±–∞–≤–ª—è–µ–º –∏–º—è —Ç–æ–≤–∞—Ä–∞ –≤ QSet
                allProducts.append(product);     // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –æ–±—â–∏–π —Å–ø–∏—Å–æ–∫
            }
        }
    }

    // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º —Ç–æ–≤–∞—Ä—ã —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º
    std::random_device rd;
    std::mt19937 g(rd());
    std::shuffle(allProducts.begin(), allProducts.end(), g);

    // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ—à–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤ "–ì–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞"
    categoryProducts["–ì–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞"] = allProducts;
    originalCategoryProducts = categoryProducts;

}


void mainshop::displayProductsForCategory(const QString& category) {
    // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ç–µ–∫—É—â–∏–µ –≤–∏–¥–∂–µ—Ç—ã –∏–∑ layout
    QLayoutItem* child;
    while ((child = gridLayout->takeAt(0)) != nullptr) {
        delete child->widget();
        delete child;
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    for (const auto& product : categoryProducts[category]) {
        addProductCard(product);
    }
}

void mainshop::onCategorySelected(QListWidgetItem* item) {
    QString category = item->text();
    displayProductsForCategory(category);
}

void mainshop::searchProducts(const QString& searchText) {
    // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ç–µ–∫—É—â–∏–µ –≤–∏–¥–∂–µ—Ç—ã –∏–∑ layout
    QLayoutItem* child;
    while ((child = gridLayout->takeAt(0)) != nullptr) {
        delete child->widget();
        delete child;
    }

    // –ù–∞–π–¥–µ–º —Ç–æ–≤–∞—Ä—ã, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ç–µ–∫—Å—Ç—É –ø–æ–∏—Å–∫–∞
    QSet<QString> uniqueNames;
    QList<Product> filteredProducts;

    for (const auto& category : std::as_const(categoryProducts)) {
        for (const Product& product : category) {
            if (product.name.contains(searchText, Qt::CaseInsensitive) &&
                !uniqueNames.contains(product.name)) {
                uniqueNames.insert(product.name);
                filteredProducts.append(product);
            }
        }
    }

    if (filteredProducts.isEmpty()) {
        QLabel* notFoundLabel = new QLabel("–¢–æ–≤–∞—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!");
        notFoundLabel->setAlignment(Qt::AlignCenter);
        notFoundLabel->setStyleSheet("font-size: 18px; color: red;");
        gridLayout->addWidget(notFoundLabel, 0, 0, Qt::AlignCenter);
    } else {
        for (const Product& product : filteredProducts) {
            addProductCard(product);
        }
    }
}

void mainshop::sortProductsAscending() {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    QString currentCategory = ui->categoryList->currentItem()->text();

    // –°–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–æ–≤–∞—Ä—ã –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    std::sort(categoryProducts[currentCategory].begin(), categoryProducts[currentCategory].end(),
              [](const Product& a, const Product& b) {
                  return a.price < b.price; // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é
              });

    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤
    displayProductsForCategory(currentCategory);
}

void mainshop::sortProductsDescending() {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    QString currentCategory = ui->categoryList->currentItem()->text();

    // –°–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–æ–≤–∞—Ä—ã –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    std::sort(categoryProducts[currentCategory].begin(), categoryProducts[currentCategory].end(),
              [](const Product& a, const Product& b) {
                  return a.price > b.price; // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —É–±—ã–≤–∞–Ω–∏—é
              });

    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤
    displayProductsForCategory(currentCategory);
}

void mainshop::resetSorting() {
    QString currentCategory = ui->categoryList->currentItem()->text(); // –¢–µ–∫—É—â–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è

    if (originalCategoryProducts.contains(currentCategory)) {
        categoryProducts[currentCategory] = originalCategoryProducts[currentCategory]; // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
        displayProductsForCategory(currentCategory); // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤
    }
}





